[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistical Computing",
    "section": "",
    "text": "1 Practical One\nNOTE: the answers to the questions below should be placed into their own qmd file in a Quarto project on GitHub. This Quarto project (the rendered document itself, as well as the source code on GitHub) will be peer-assessed next week.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Practical One</span>"
    ]
  },
  {
    "objectID": "Question 1.html",
    "href": "Question 1.html",
    "title": "2  Question 1",
    "section": "",
    "text": "2.1 Question 1\nairquality_q1 &lt;- airquality[!complete.cases(airquality),] \nairquality_q1\n\n    Ozone Solar.R Wind Temp Month Day\n5      NA      NA 14.3   56     5   5\n6      28      NA 14.9   66     5   6\n10     NA     194  8.6   69     5  10\n11      7      NA  6.9   74     5  11\n25     NA      66 16.6   57     5  25\n26     NA     266 14.9   58     5  26\n27     NA      NA  8.0   57     5  27\n32     NA     286  8.6   78     6   1\n33     NA     287  9.7   74     6   2\n34     NA     242 16.1   67     6   3\n35     NA     186  9.2   84     6   4\n36     NA     220  8.6   85     6   5\n37     NA     264 14.3   79     6   6\n39     NA     273  6.9   87     6   8\n42     NA     259 10.9   93     6  11\n43     NA     250  9.2   92     6  12\n45     NA     332 13.8   80     6  14\n46     NA     322 11.5   79     6  15\n52     NA     150  6.3   77     6  21\n53     NA      59  1.7   76     6  22\n54     NA      91  4.6   76     6  23\n55     NA     250  6.3   76     6  24\n56     NA     135  8.0   75     6  25\n57     NA     127  8.0   78     6  26\n58     NA      47 10.3   73     6  27\n59     NA      98 11.5   80     6  28\n60     NA      31 14.9   77     6  29\n61     NA     138  8.0   83     6  30\n65     NA     101 10.9   84     7   4\n72     NA     139  8.6   82     7  11\n75     NA     291 14.9   91     7  14\n83     NA     258  9.7   81     7  22\n84     NA     295 11.5   82     7  23\n96     78      NA  6.9   86     8   4\n97     35      NA  7.4   85     8   5\n98     66      NA  4.6   87     8   6\n102    NA     222  8.6   92     8  10\n103    NA     137 11.5   86     8  11\n107    NA      64 11.5   79     8  15\n115    NA     255 12.6   75     8  23\n119    NA     153  5.7   88     8  27\n150    NA     145 13.2   77     9  27",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Question 1</span>"
    ]
  },
  {
    "objectID": "Question 1.html#question-1",
    "href": "Question 1.html#question-1",
    "title": "2  Question 1",
    "section": "",
    "text": "Find all rows in “airquality” that have missing values. Note that the airquality dataset in R is always available (just type airquality in the console to see it).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Question 1</span>"
    ]
  },
  {
    "objectID": "Question 2.html",
    "href": "Question 2.html",
    "title": "3  Question 1",
    "section": "",
    "text": "3.1 Question 2\nairquality_q2 &lt;- airquality  \nairquality_q2 \n\n    Ozone Solar.R Wind Temp Month Day\n1      41     190  7.4   67     5   1\n2      36     118  8.0   72     5   2\n3      12     149 12.6   74     5   3\n4      18     313 11.5   62     5   4\n5      NA      NA 14.3   56     5   5\n6      28      NA 14.9   66     5   6\n7      23     299  8.6   65     5   7\n8      19      99 13.8   59     5   8\n9       8      19 20.1   61     5   9\n10     NA     194  8.6   69     5  10\n11      7      NA  6.9   74     5  11\n12     16     256  9.7   69     5  12\n13     11     290  9.2   66     5  13\n14     14     274 10.9   68     5  14\n15     18      65 13.2   58     5  15\n16     14     334 11.5   64     5  16\n17     34     307 12.0   66     5  17\n18      6      78 18.4   57     5  18\n19     30     322 11.5   68     5  19\n20     11      44  9.7   62     5  20\n21      1       8  9.7   59     5  21\n22     11     320 16.6   73     5  22\n23      4      25  9.7   61     5  23\n24     32      92 12.0   61     5  24\n25     NA      66 16.6   57     5  25\n26     NA     266 14.9   58     5  26\n27     NA      NA  8.0   57     5  27\n28     23      13 12.0   67     5  28\n29     45     252 14.9   81     5  29\n30    115     223  5.7   79     5  30\n31     37     279  7.4   76     5  31\n32     NA     286  8.6   78     6   1\n33     NA     287  9.7   74     6   2\n34     NA     242 16.1   67     6   3\n35     NA     186  9.2   84     6   4\n36     NA     220  8.6   85     6   5\n37     NA     264 14.3   79     6   6\n38     29     127  9.7   82     6   7\n39     NA     273  6.9   87     6   8\n40     71     291 13.8   90     6   9\n41     39     323 11.5   87     6  10\n42     NA     259 10.9   93     6  11\n43     NA     250  9.2   92     6  12\n44     23     148  8.0   82     6  13\n45     NA     332 13.8   80     6  14\n46     NA     322 11.5   79     6  15\n47     21     191 14.9   77     6  16\n48     37     284 20.7   72     6  17\n49     20      37  9.2   65     6  18\n50     12     120 11.5   73     6  19\n51     13     137 10.3   76     6  20\n52     NA     150  6.3   77     6  21\n53     NA      59  1.7   76     6  22\n54     NA      91  4.6   76     6  23\n55     NA     250  6.3   76     6  24\n56     NA     135  8.0   75     6  25\n57     NA     127  8.0   78     6  26\n58     NA      47 10.3   73     6  27\n59     NA      98 11.5   80     6  28\n60     NA      31 14.9   77     6  29\n61     NA     138  8.0   83     6  30\n62    135     269  4.1   84     7   1\n63     49     248  9.2   85     7   2\n64     32     236  9.2   81     7   3\n65     NA     101 10.9   84     7   4\n66     64     175  4.6   83     7   5\n67     40     314 10.9   83     7   6\n68     77     276  5.1   88     7   7\n69     97     267  6.3   92     7   8\n70     97     272  5.7   92     7   9\n71     85     175  7.4   89     7  10\n72     NA     139  8.6   82     7  11\n73     10     264 14.3   73     7  12\n74     27     175 14.9   81     7  13\n75     NA     291 14.9   91     7  14\n76      7      48 14.3   80     7  15\n77     48     260  6.9   81     7  16\n78     35     274 10.3   82     7  17\n79     61     285  6.3   84     7  18\n80     79     187  5.1   87     7  19\n81     63     220 11.5   85     7  20\n82     16       7  6.9   74     7  21\n83     NA     258  9.7   81     7  22\n84     NA     295 11.5   82     7  23\n85     80     294  8.6   86     7  24\n86    108     223  8.0   85     7  25\n87     20      81  8.6   82     7  26\n88     52      82 12.0   86     7  27\n89     82     213  7.4   88     7  28\n90     50     275  7.4   86     7  29\n91     64     253  7.4   83     7  30\n92     59     254  9.2   81     7  31\n93     39      83  6.9   81     8   1\n94      9      24 13.8   81     8   2\n95     16      77  7.4   82     8   3\n96     78      NA  6.9   86     8   4\n97     35      NA  7.4   85     8   5\n98     66      NA  4.6   87     8   6\n99    122     255  4.0   89     8   7\n100    89     229 10.3   90     8   8\n101   110     207  8.0   90     8   9\n102    NA     222  8.6   92     8  10\n103    NA     137 11.5   86     8  11\n104    44     192 11.5   86     8  12\n105    28     273 11.5   82     8  13\n106    65     157  9.7   80     8  14\n107    NA      64 11.5   79     8  15\n108    22      71 10.3   77     8  16\n109    59      51  6.3   79     8  17\n110    23     115  7.4   76     8  18\n111    31     244 10.9   78     8  19\n112    44     190 10.3   78     8  20\n113    21     259 15.5   77     8  21\n114     9      36 14.3   72     8  22\n115    NA     255 12.6   75     8  23\n116    45     212  9.7   79     8  24\n117   168     238  3.4   81     8  25\n118    73     215  8.0   86     8  26\n119    NA     153  5.7   88     8  27\n120    76     203  9.7   97     8  28\n121   118     225  2.3   94     8  29\n122    84     237  6.3   96     8  30\n123    85     188  6.3   94     8  31\n124    96     167  6.9   91     9   1\n125    78     197  5.1   92     9   2\n126    73     183  2.8   93     9   3\n127    91     189  4.6   93     9   4\n128    47      95  7.4   87     9   5\n129    32      92 15.5   84     9   6\n130    20     252 10.9   80     9   7\n131    23     220 10.3   78     9   8\n132    21     230 10.9   75     9   9\n133    24     259  9.7   73     9  10\n134    44     236 14.9   81     9  11\n135    21     259 15.5   76     9  12\n136    28     238  6.3   77     9  13\n137     9      24 10.9   71     9  14\n138    13     112 11.5   71     9  15\n139    46     237  6.9   78     9  16\n140    18     224 13.8   67     9  17\n141    13      27 10.3   76     9  18\n142    24     238 10.3   68     9  19\n143    16     201  8.0   82     9  20\n144    13     238 12.6   64     9  21\n145    23      14  9.2   71     9  22\n146    36     139 10.3   81     9  23\n147     7      49 10.3   69     9  24\n148    14      20 16.6   63     9  25\n149    30     193  6.9   70     9  26\n150    NA     145 13.2   77     9  27\n151    14     191 14.3   75     9  28\n152    18     131  8.0   76     9  29\n153    20     223 11.5   68     9  30\n\nmean_temp &lt;- mean(as.numeric(airquality_q2[[4]]), na.rm = TRUE)\nsd_temp &lt;- sd(as.numeric(airquality_q2[[4]]), na.rm = TRUE)\nmin_temp &lt;- min(as.numeric(airquality_q2[[4]]), na.rm = TRUE)\nmax_temp &lt;- max(as.numeric(airquality_q2[[4]]), na.rm = TRUE)\n\nmean_ozone &lt;- mean(as.numeric(airquality_q2[[1]]), na.rm = TRUE)\nsd_ozone &lt;- sd(as.numeric(airquality_q2[[1]]),na.rm = TRUE)\nmin_ozone &lt;- min(as.numeric(airquality_q2[[1]]), na.rm = TRUE)\nmax_ozone &lt;- max(as.numeric(airquality_q2[[1]]), na.rm = TRUE)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Question 1</span>"
    ]
  },
  {
    "objectID": "Question 2.html#question-2",
    "href": "Question 2.html#question-2",
    "title": "3  Question 1",
    "section": "",
    "text": "Find mean, sd, min, max for each of temperature and ozone level.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Question 1</span>"
    ]
  },
  {
    "objectID": "Question 2.html#section",
    "href": "Question 2.html#section",
    "title": "3  Question 1",
    "section": "3.2 ",
    "text": "3.2",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Question 1</span>"
    ]
  },
  {
    "objectID": "Question 3.html",
    "href": "Question 3.html",
    "title": "4  Question 1",
    "section": "",
    "text": "4.1 Question 3\ncars &lt;- cars  \ncars[] &lt;- lapply(cars,as.numeric) \nhead(cars)    \n\n  speed dist\n1     4    2\n2     4   10\n3     7    4\n4     7   22\n5     8   16\n6     9   10\n\nmatrix_x &lt;- cbind(1,matrix(cars$speed))\nmatrix_y &lt;- matrix(cars$dist)\nCalculate beta estimate\nbeta_estimate &lt;- solve(t(matrix_x)%*%(matrix_x))%*%t(matrix_x)%*%(matrix_y) \nbeta_estimate\n\n           [,1]\n[1,] -17.579095\n[2,]   3.932409",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Question 1</span>"
    ]
  },
  {
    "objectID": "Question 3.html#question-3",
    "href": "Question 3.html#question-3",
    "title": "4  Question 1",
    "section": "",
    "text": "For linear regression, parameter estimates can be found as follows \\(\\beta=(X^TX)^{-1}X^TY\\). Here, Y is the response variable, and X is the design matrix. The cars data (an R data set, also always available in R) contains two variables: speed and distance to stop. Fit a simple linear regression model to these data, i.e. find the β estimates, using the equation above, and matrix calcuations in R.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Question 1</span>"
    ]
  },
  {
    "objectID": "Question 3.html#section",
    "href": "Question 3.html#section",
    "title": "4  Question 1",
    "section": "4.2 ",
    "text": "4.2",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Question 1</span>"
    ]
  },
  {
    "objectID": "Question 4.html",
    "href": "Question 4.html",
    "title": "5  Question 1",
    "section": "",
    "text": "5.1 Question 4\ncar_fit &lt;- lm(cars$dist~ cars$speed)  \nsummary(car_fit)\n\n\nCall:\nlm(formula = cars$dist ~ cars$speed)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.069  -9.525  -2.272   9.215  43.201 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -17.5791     6.7584  -2.601   0.0123 *  \ncars$speed    3.9324     0.4155   9.464 1.49e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.38 on 48 degrees of freedom\nMultiple R-squared:  0.6511,    Adjusted R-squared:  0.6438 \nF-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Question 1</span>"
    ]
  },
  {
    "objectID": "Question 4.html#question-4",
    "href": "Question 4.html#question-4",
    "title": "5  Question 1",
    "section": "",
    "text": "Check that you get the same β estimates as when fitting the linear regression model using lm() in R.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Question 1</span>"
    ]
  }
]