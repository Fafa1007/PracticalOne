# Practical One

## Set-up



```{r}
if (!requireNamespace("remotes", quietly = TRUE)) {
  install.packages("remotes")
}
remotes::install_github("MiguelRodo/projrsimple")
```

```{r}
projrsimple::projr_init()
```

```{r}
projrsimple::projr_run
```



## Set-up Github



```{r}
install.packages("usethis")
usethis::use_git()
```

```{r}
usethis::create_github_token()
```

```{r}
gitcreds::gitcreds_set()
```

```{r}
usethis::use_github()
```



------------------------------------------------------------------------

## Question 1

1.  Find all rows in “airquality” that have missing values. Note that the `airquality` dataset in `R` is always available (just type `airquality` in the console to see it).



```{r}
airquality_q1 <- airquality[!complete.cases(airquality),]
airquality_q1
```



------------------------------------------------------------------------

## Question 2

2.  Find mean, sd, min, max for each of temperature and ozone level.



```{r}
airquality_q2 <- airquality 
airquality_q2
mean_temp <- mean(as.numeric(airquality_q2[[4]]), na.rm = TRUE)
sd_temp <- sd(as.numeric(airquality_q2[[4]]), na.rm = TRUE)
min_temp <- min(as.numeric(airquality_q2[[4]]), na.rm = TRUE)
max_temp <- max(as.numeric(airquality_q2[[4]]), na.rm = TRUE)

mean_ozone <- mean(as.numeric(airquality_q2[[1]]), na.rm = TRUE)
sd_ozone <- sd(as.numeric(airquality_q2[[1]]),na.rm = TRUE)
min_ozone <- min(as.numeric(airquality_q2[[1]]), na.rm = TRUE)
max_ozone <- max(as.numeric(airquality_q2[[1]]), na.rm = TRUE)
```



------------------------------------------------------------------------

## Question 3

3.  For linear regression, parameter estimates can be found as follows $\beta=(X^TX)^{-1}X^TY$. Here, Y is the response variable, and X is the design matrix. The cars data (an R data set, also always available in `R`) contains two variables: speed and distance to stop. Fit a simple linear regression model to these data, i.e. find the β estimates, using the equation above, and matrix calcuations in R.



```{r}
cars <- cars 
cars[] <- lapply(cars,as.numeric) 
head(cars)  

matrix_x <- cbind(1,matrix(cars$speed)) 
matrix_y <- matrix(cars$dist)
```



Calculate beta estimate



```{r}
beta_estimate <- solve(t(matrix_x)%*%(matrix_x))%*%t(matrix_x)%*%(matrix_y)
beta_estimate
```



------------------------------------------------------------------------

## Question 4

4.  Check that you get the same β estimates as when fitting the linear regression model using lm() in R.



```{r}
car_fit <- lm(cars$dist~ cars$speed) 
summary(car_fit)
```

